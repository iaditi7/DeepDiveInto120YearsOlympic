DROP TABLE IF EXISTS OLYMPIC_DATA;
CREATE TABLE IF NOT EXISTS OLYMPIC_DATA(
	ID INT,
	NAME VARCHAR,
	SEX VARCHAR,
	AGE VARCHAR,
	HEIGHT VARCHAR,
	WEIGHT VARCHAR,
	TEAM VARCHAR,
	NOC VARCHAR,
	GAMES VARCHAR,
	YEAR VARCHAR,
	SEASON VARCHAR,
	CITY VARCHAR,
	SPORT VARCHAR,
	EVENT VARCHAR,
	MEDAL VARCHAR
);

DROP TABLE IF EXISTS OLYMPIC_REGION;
CREATE TABLE IF NOT EXISTS OLYMPIC_REGION(
	NOC 	VARCHAR,
	REGION 	VARCHAR, 
	NOTES 	VARCHAR
);

SELECT * FROM OLYMPIC_DATA;
SELECT * FROM OLYMPIC_REGION;

SELECT COUNT(1) FROM OLYMPIC_DATA; /*271116*/
SELECT COUNT(1) FROM OLYMPIC_REGION; /*230*/

/*1. How many olympics games have been held?*/
SELECT COUNT(DISTINCT GAMES) AS TOTAL_GAMES FROM OLYMPIC_DATA; /*51*/

/*2. List down all Olympics games held so far.*/
SELECT DISTINCT YEAR, SEASON, CITY FROM OLYMPIC_DATA ORDER BY YEAR;

/*3. Mention the total no of nations who participated in each olympics game?*/
WITH ALL_COUNTRIES AS
	(SELECT D.GAMES, R.REGION FROM OLYMPIC_DATA D JOIN OLYMPIC_REGION R 
	ON D.NOC=R.NOC GROUP BY D.GAMES, R.REGION ORDER BY GAMES)
SELECT GAMES, COUNT(1) AS TOTAL_COUNTRIES FROM ALL_COUNTRIES GROUP BY GAMES ORDER BY GAMES

SELECT GAMES, COUNT(1) FROM
(SELECT D.GAMES, R.REGION FROM OLYMPIC_DATA D JOIN OLYMPIC_REGION R 
	ON D.NOC=R.NOC GROUP BY D.GAMES, R.REGION ORDER BY GAMES) GROUP BY GAMES;

/*4. Which year saw the highest and lowest no of countries participating in olympics*/
WITH ALL_COUNTRIES AS
	(SELECT GAMES, R.REGION FROM OLYMPIC_DATA D
	JOIN OLYMPIC_REGION R ON R.NOC=D.NOC
	GROUP BY GAMES, R.REGION),
	TOT_NO_COUNTRIES AS
	(SELECT GAMES, COUNT(1) AS TOTAL_COUNTRIES FROM ALL_COUNTRIES GROUP BY GAMES)
	SELECT DISTINCT
	CONCAT(first_value(games) over(order by TOTAL_COUNTRIES asc),'-',
			first_value(TOTAL_COUNTRIES) over(order by TOTAL_COUNTRIES asc)) as LOWEST_COUNTED_COUNTRY,
	CONCAT(FIRST_VALUE(GAMES) OVER(ORDER BY TOTAL_COUNTRIES DESC),'-',
	FIRST_VALUE(TOTAL_COUNTRIES) OVER(ORDER BY TOTAL_COUNTRIES DESC)) AS HIGHEST_COUNTED_COUNTRY 
	FROM TOT_NO_COUNTRIES 
	ORDER BY 1;

/*5. Which nation has participated in all of the olympic games?*/

SELECT R.REGION, COUNT(GAMES) AS PARTICIPATED_IN_TOTAL_GAMES FROM OLYMPIC_DATA D
	JOIN OLYMPIC_REGION R ON D.NOC=R.NOC 
	GROUP BY R.REGION HAVING COUNT(GAMES)=(SELECT COUNT(DISTINCT GAMES) FROM OLYMPIC_DATA);

WITH TOTAL_GAMES AS
	(SELECT COUNT(DISTINCT GAMES) AS TOT_GAMES FROM OLYMPIC_DATA),
	COUNTRY_NAME AS
	(SELECT R.REGION AS COUNTRY_S_NAME FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC 
		GROUP BY GAMES, R.REGION),
	COUNTRY_PARTICIPATED AS
	(SELECT COUNTRY_S_NAME, COUNT(1) AS TOTAL_PARTICIPATED_GAMES 
		FROM COUNTRY_NAME GROUP BY COUNTRY_S_NAME)
SELECT CP.* FROM COUNTRY_PARTICIPATED CP JOIN TOTAL_GAMES TG
	ON CP.TOTAL_PARTICIPATED_GAMES=TG.TOT_GAMES ORDER BY 1;

/*6. Identify the sport which was played in all summer olympics.*/
WITH TOTAL_DIFF_GAMES AS
	(SELECT COUNT(DISTINCT GAMES) AS TOTAL_CNT FROM OLYMPIC_DATA WHERE SEASON='Summer'),
	TOTAL_SPORT_GAME AS 
	(SELECT SPORT, COUNT(DISTINCT GAMES) AS TOT_CNT FROM OLYMPIC_DATA WHERE SEASON='Summer' GROUP BY SPORT ORDER BY 2 DESC )

SELECT TSG.* FROM TOTAL_DIFF_GAMES TDG JOIN TOTAL_SPORT_GAME TSG ON TDG.TOTAL_CNT=TSG.TOT_CNT;

/*7. Which Sports were just played only once in the olympics.*/

WITH TEMP1 AS
(SELECT DISTINCT GAMES, SPORT FROM OLYMPIC_DATA),
TEMP2 AS
(SELECT SPORT, COUNT(SPORT) AS CNT FROM TEMP1 GROUP BY SPORT)

SELECT TEMP2.*, TEMP1.GAMES FROM TEMP1 JOIN TEMP2 ON TEMP1.SPORT=TEMP2.SPORT WHERE TEMP2.CNT=1 ORDER BY TEMP1.SPORT;

/*8. Fetch the total no of sports played in each olympic games.*/

SELECT GAMES, COUNT(DISTINCT SPORT) AS TOTAL_SPORT FROM OLYMPIC_DATA GROUP BY GAMES ORDER BY 2 DESC;

/*9. Fetch oldest athletes to win a gold medal*/

SELECT * FROM OLYMPIC_DATA WHERE AGE=(SELECT MAX(AGE) FROM OLYMPIC_DATA WHERE MEDAL='Gold' AND AGE<>'NA') AND MEDAL='Gold';

/*10. Find the Ratio of male and female athletes participated in all olympic games.*/
WITH TOTAL_SEX_COUNT AS
	(SELECT SEX, COUNT(1) AS TOT_CNT FROM OLYMPIC_DATA GROUP BY SEX),
	T1 AS 
		(SELECT *, ROW_NUMBER() OVER(ORDER BY TOT_CNT) AS RNK FROM TOTAL_SEX_COUNT),
	MAX_CNT AS
		(SELECT TOT_CNT FROM T1 WHERE RNK=2),
	MIN_CNT AS
		(SELECT TOT_CNT FROM T1 WHERE RNK=1)

SELECT CONCAT('1 : ',ROUND(MAX_CNT.TOT_CNT::DECIMAL/MIN_CNT.TOT_CNT,2)) AS "F&M_RATIO"
FROM MAX_CNT, MIN_CNT;

/*11. Fetch the top 5 athletes who have won the most gold medals.*/
WITH TOT_CNT AS
(SELECT NAME, TEAM, COUNT(NAME) AS CNT FROM OLYMPIC_DATA WHERE MEDAL='Gold' 
	GROUP BY NAME, TEAM ORDER BY COUNT(NAME) DESC),
 T1 AS
	(SELECT *, DENSE_RANK() OVER(ORDER BY CNT DESC) AS RNK FROM TOT_CNT)
SELECT NAME, TEAM, CNT FROM T1 WHERE RNK<=5;

/*12. Fetch the top 5 athletes who have won the most medals (gold/silver/bronze).*/
WITH T1 AS
	(SELECT NAME, TEAM, COUNT(MEDAL) AS CNT FROM OLYMPIC_DATA WHERE MEDAL IN('Gold','Silver','Bronze')
		GROUP BY NAME, TEAM ORDER BY CNT DESC),
	T2 AS
		(SELECT *, DENSE_RANK() OVER(ORDER BY CNT DESC) AS RNK FROM T1)
SELECT NAME, TEAM, CNT FROM T2 WHERE RNK<=5

/*13. Fetch the top 5 most successful countries in olympics. Success is defined by no of medals won.*/
WITH T1 AS
	(SELECT R.REGION, COUNT(D.MEDAL) AS TOTAL_MEDAL_COUNT FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL <> 'NA'
		GROUP BY R.REGION ORDER BY TOTAL_MEDAL_COUNT DESC),
	T2 AS
		(SELECT *, DENSE_RANK() OVER(ORDER BY TOTAL_MEDAL_COUNT DESC) AS RNK FROM T1)
SELECT REGION, TOTAL_MEDAL_COUNT, RNK FROM T2 WHERE RNK<=5

/*14. List down total gold, silver and bronze medals won by each country.*/
SELECT R.REGION AS COUNTRY, D.MEDAL, COUNT(1) AS TOTAL_MEDAL FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<>'NA'
		GROUP BY R.REGION, D.MEDAL ORDER BY R.REGION, D.MEDAL;

/*CREATE EXTENSION TABLEFUNC;*/

SELECT country, 
	coalesce(gold, 0) as Gold,
	coalesce(Silver, 0) as Silver,
	coalesce(Bronze, 0) as Bronze
	FROM CROSSTAB('SELECT R.REGION AS COUNTRY, D.MEDAL, COUNT(1) AS TOTAL_MEDAL FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<> ''NA''
		GROUP BY R.REGION, D.MEDAL ORDER BY R.REGION, D.MEDAL',
		'VALUES (''Bronze''),(''Gold''),(''Silver'')')
	AS RESULT(COUNTRY VARCHAR, Bronze BIGINT, Gold BIGINT, Silver BIGINT)
	ORDER BY Gold desc, Silver desc, Bronze desc;

/*15. List down total gold, silver and bronze medals won by each country corresponding to each olympic games.*/
SELECT games_country, 
	coalesce(gold, 0) as Gold,
	coalesce(Silver, 0) as Silver,
	coalesce(Bronze, 0) as Bronze
	FROM CROSSTAB('SELECT CONCAT(GAMES, ''-'',R.REGION) AS GAMES_COUNTRY, D.MEDAL, COUNT(1) AS TOTAL_MEDAL FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<> ''NA''
		GROUP BY GAMES, R.REGION, D.MEDAL ORDER BY GAMES, R.REGION, D.MEDAL',
		'VALUES (''Bronze''),(''Gold''),(''Silver'')')
	AS RESULT(GAMES_COUNTRY VARCHAR, Bronze BIGINT, Gold BIGINT, Silver BIGINT)
	ORDER BY games_country;



SELECT D.GAMES AS GAME, R.REGION AS COUNTRY, D.MEDAL, COUNT(1) AS TOTAL_MEDAL FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<> 'NA'
		GROUP BY D.GAMES, R.REGION, D.MEDAL ORDER BY D.GAMES, D.MEDAL

/*16. Identify which country won the most gold, most silver and most bronze medals in each olympic games.*/
with t1 as
(SELECT substring(games_country, 1, position(' - ' in games_country)-1) as games,
	substring(games_country, position(' - ' in games_country) + 3) as country,
	coalesce(gold, 0) as Gold,
	coalesce(Silver, 0) as Silver,
	coalesce(Bronze, 0) as Bronze
	FROM CROSSTAB('SELECT CONCAT(GAMES, '' - '',R.REGION) AS GAMES_COUNTRY, D.MEDAL, COUNT(1) AS TOTAL_MEDAL FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<> ''NA''
		GROUP BY GAMES, R.REGION, D.MEDAL ORDER BY GAMES, R.REGION, D.MEDAL',
		'VALUES (''Bronze''),(''Gold''),(''Silver'')')
	AS RESULT(GAMES_COUNTRY VARCHAR, Bronze BIGINT, Gold BIGINT, Silver BIGINT)
	ORDER BY games_country)
select distinct games, 
	concat(first_value(country) over(partition by games order by gold desc), ' - ',
	first_value(gold) over(partition by games order by gold desc)) as Gold,
	concat(first_value(country) over(partition by games order by silver desc), ' - ',
	first_value(silver) over(partition by games order by silver desc)) as Silver,
	concat(first_value(country) over(partition by games order by bronze desc), ' - ',
	first_value(bronze) over(partition by games order by bronze desc)) as Bronze
	from t1 order by games;

/*17. Identify which country won the most gold, most silver, most bronze medals and the most medals in each olympic games.*/
with TEMP1 as
(SELECT substring(games_country, 1, position(' - ' in games_country)-1) as games,
	substring(games_country, position(' - ' in games_country) + 3) as country,
	coalesce(gold, 0) as Gold,
	coalesce(Silver, 0) as Silver,
	coalesce(Bronze, 0) as Bronze
	FROM CROSSTAB('SELECT CONCAT(GAMES, '' - '',R.REGION) AS GAMES_COUNTRY, D.MEDAL, COUNT(1) AS TOTAL_MEDAL FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<> ''NA''
		GROUP BY GAMES, R.REGION, D.MEDAL ORDER BY GAMES, R.REGION, D.MEDAL',
		'VALUES (''Bronze''),(''Gold''),(''Silver'')')
	AS RESULT(GAMES_COUNTRY VARCHAR, Bronze BIGINT, Gold BIGINT, Silver BIGINT)),
TEMP2 AS
(SELECT D.GAMES, R.REGION AS COUNTRY, COUNT(1) AS TOT_MEDALS FROM OLYMPIC_DATA D 
	JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<> 'NA' 
	GROUP BY D.GAMES, R.REGION ORDER BY D.GAMES, R.REGION)

SELECT DISTINCT T1.GAMES,
	CONCAT(FIRST_VALUE(T1.COUNTRY) OVER(PARTITION BY T1.GAMES ORDER BY GOLD DESC), '-',
			FIRST_VALUE(T1.GOLD) OVER(PARTITION BY T1.GAMES ORDER BY GOLD DESC)) AS GOLD,
	CONCAT(FIRST_VALUE(T1.COUNTRY) OVER(PARTITION BY T1.GAMES ORDER BY SILVER DESC), '-',
			FIRST_VALUE(T1.SILVER) OVER(PARTITION BY T1.GAMES ORDER BY SILVER DESC)) AS SILVER,
	CONCAT(FIRST_VALUE(T1.COUNTRY) OVER(PARTITION BY T1.GAMES ORDER BY BRONZE DESC), '-',
			FIRST_VALUE(T1.BRONZE) OVER(PARTITION BY T1.GAMES ORDER BY BRONZE DESC)) AS BRONZE,
	CONCAT(FIRST_VALUE(T2.COUNTRY) OVER(PARTITION BY T2.GAMES ORDER BY TOT_MEDALS DESC NULLS LAST),'-',
			FIRST_VALUE(T2.TOT_MEDALS) OVER(PARTITION BY T2.GAMES ORDER BY TOT_MEDALS DESC NULLS LAST)) AS TMAX_MEDALS
FROM TEMP1 T1 JOIN TEMP2 T2 ON T1.GAMES=T2.GAMES AND T1.COUNTRY=T2.COUNTRY
ORDER BY GAMES

/*18. Which countries have never won gold medal but have won silver/bronze medals?*/
SELECT * FROM
	(SELECT country,
	coalesce(gold, 0) as Gold,
	coalesce(Silver, 0) as Silver,
	coalesce(Bronze, 0) as Bronze
	FROM CROSSTAB('SELECT R.REGION AS COUNTRY, D.MEDAL, COUNT(1) AS TOTAL_MEDAL FROM OLYMPIC_DATA D 
		JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE MEDAL<> ''NA''
		GROUP BY R.REGION, D.MEDAL ORDER BY R.REGION, D.MEDAL',
		'VALUES (''Bronze''),(''Gold''),(''Silver'')')
	AS RESULT(COUNTRY VARCHAR, Bronze BIGINT, Gold BIGINT, Silver BIGINT)) X
	WHERE GOLD=0 AND (SILVER>0 OR BRONZE>0)
	ORDER BY Gold desc NULLS LAST, Silver desc NULLS LAST, Bronze desc NULLS LAST;


/*19. In which Sport/event, India has won highest medals.*/
WITH TEMP1 AS
(SELECT R.REGION AS COUNTRY, D.SPORT, COUNT(D.MEDAL) AS CNT_MEDAL FROM OLYMPIC_DATA D 
	JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE R.REGION='India' 
	GROUP BY R.REGION, D.SPORT ORDER BY CNT_MEDAL DESC),
TEMP2 AS
	(SELECT *, ROW_NUMBER() OVER(ORDER BY CNT_MEDAL DESC) AS RNK FROM TEMP1)
SELECT SPORT, CNT_MEDAL FROM TEMP2 WHERE RNK=1;

/*20. Break down all olympic games where India won medal for Hockey and how many medals in each olympic games*/

SELECT R.REGION AS COUNTRY, D.SPORT, D.GAMES, COUNT(D.MEDAL) AS CNT_MEDAL FROM OLYMPIC_DATA D 
	JOIN OLYMPIC_REGION R ON D.NOC=R.NOC WHERE R.REGION='India' AND D.SPORT='Hockey'
	GROUP BY R.REGION, D.SPORT, D.GAMES ORDER BY D.GAMES
